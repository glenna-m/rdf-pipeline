#! /usr/bin/perl -w

# This script will be invoked by run-test.perl as:
#
#	cd '$TESTDIR'
# 	test-script '$DOCUMENT_ROOT'
#
# where $TESTDIR is the full path of the nnnn numbered test directory
# that is being tested, and $DOCUMENT_ROOT is the full path
# of the RDF Pipeline's Apache DOCUMENT_ROOT.
#
# You may customize any part of this script as needed for this test,
# though the most commonly customized part is marked "CUSTOMIZE HERE".  
# The script must exit(0) iff the test passes.

use strict;

my $wwwDir = shift @ARGV || $ENV{DOCUMENT_ROOT} || die;
# Ensure this env var is set, so that pipeline-request.perl can find it:
$ENV{DOCUMENT_ROOT} = $wwwDir;	

############ CUSTOMIZE HERE ################
# Test ste.py (simple template expansion).
my $devDir = $ENV{RDF_PIPELINE_DEV_DIR} || die "ERROR: This test requires the \$RDF_PIPELINE_DEV_DIR \n environment variable to be set, so that it can find \n the tools directory\n";
my $toolsDir = "$devDir/tools";
-d $toolsDir or die "ERROR: Tools directory not found: $toolsDir\n";
my $ste = "$toolsDir/ste.py";
-x $ste or die "ERROR: Cannot execute $ste\n";
### First test:
my $pythonPath = $ENV{PYTHONPATH} || "";
my $cmd = "export \"PYTHONPATH=$pythonPath:$toolsDir\" ; ./module-invoker.py setup-files/sample-template.txt > $wwwDir/test/sample-template-expanded.txt";
# warn "cmd: $cmd\n";
!system($cmd) or die;
############################################

exit 0;

