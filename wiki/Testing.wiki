#summary Testing the RDF Pipeline framework

= Introduction =

The RDF Pipeline framework has a regression test suite in RDF-Pipeline/t .  Since it runs as a mod_perl2 module in Apache2, the RDF Pipeline framework must be properly installed (as a mod_perl2 module) before the test suite can be run.  Once installed, the test suite may be run by issuing the following command from the RDF-Pipeline module directory:
{{{
make test
}}}

= Test suite conventions =
The test suite depends on two directories, specified in the following environment variables, which are normally set by set_env.sh:
  * *RDF_PIPELINE_WWW_DIR* -- The Apache DOCUMENT_ROOT for the RDF Pipeline.
  * *RDF_PIPELINE_MODULE_DIR* -- The RDF::Pipeline module directory, "RDF-Pipeline".

Each test is in a numbered directory RDF-Pipeline/t/0`*` and contains the following subdirectories or files.  All are optional unless noted:
  * *setup-files* -- This directory contains a snapshot of the $RDF_PIPELINE_WWW_DIR contents that should be used when running the test.  If it does not exist, the current $RDF_PIPELINE_WWW_DIR contents will be used.
  * *setup* -- A shell script that will be run (if it exists) before the test is executed, to further set up the state of the machine, prior to running the test.
  * *test-script* -- (REQUIRED) The script that runs the test.  If it returns 0, then the test passes.  Otherwise, the test fails.  
  * *result-files* -- If used by test-script, this directory will contain a snapshot of the $RDF_PIPELINE_WWW_DIR contents as it existed after running the test.  
  * *sanitize-results* -- A shell script that will be run after the result-files have been captured, to further sanitize them (such as removing/normalizing dates) prior to comparing them with the expected-files.  
  * *expected-files* -- This directory will contain a snapshot of the $RDF_PIPELINE_WWW_DIR contents as it _should_ be after successfully running the test.  Unless test-script does something unusual, if the result-files differs from the expected-files (after running cleanup-results) then the test fails; if they are the same, then the test succeeds.

A test usually issues a series of HTTP requests against the Apache instance that is hosting the pipeline.  Hence, each test is normally driven by one or more URLs.  To facilitate regression testing, all data that is normally relevant to test is copied to the $RDF_PIPELINE_WWW_DIR/test directory.  This includes:
  * *apacheAccess.log* -- The Apache "access.log" file (excerpted and filtered through RDF-Pipeline/t/stripdates.perl to remove irrelevant detail)
  * *apacheError.log* -- The Apache "error.log" file (excerpted and filtered through RDF-Pipeline/t/filterlog.perl to remove irrelevant detail)
  * *testout* -- The concatenated results (filtered through RDF-Pipeline/t/stripdates.perl) of running 'curl -i' on the test URLs.  This includes both the headers and the content that were returned.

Usually test-script will run pipeline-request.perl to run the test and capture the results, sanitize-results to sanitize the results, and then "diff -r expected-files result-files" to determine whether the test passed or failed.  However, it can do whatever it wants.

= Diagnosing a failed test =
To figure out why a test failed, cd into that `0*` test directory, and then do:
{{{
diff -r expected-files result-files
}}}

= Adding a new test =

*** stopped here ***

A new test is normally added by the following steps:
  # 