#! /usr/bin/perl -w

# This script will be invoked by run-test.perl as:
#
# 	test-script '$TESTDIR' '$RDF_PIPELINE_WWW_DIR'
#
# where $TESTDIR is the full path of the nnnn numbered test directory
# that is being tested, and $RDF_PIPELINE_WWW_DIR is the full path
# of the RDF Pipeline's Apache DOCUMENT_ROOT.
#
# You may customize any part of this script as needed for this test,
# though the most commonly customized part is marked "CUSTOMIZE HERE".  
# The script must exit(0) iff the test passes.

use strict;

my $testDir = shift @ARGV || die;
my $wwwDir = shift @ARGV || die;
chdir("$testDir") or die "ERROR: Could not chdir('$testDir')\n";

# Clear out the old $wwwDir/test files:
!system("rm -rf '$wwwDir/test'") or die if -e "$wwwDir/test";
mkdir("$wwwDir/test") or die;

############ CUSTOMIZE HERE ################
# Invoke the URL, concatenating its output to $wwwDir/test/testout :
!system("../helpers/pipeline-request.perl GET 'http://localhost/node/addone'") or die;
#### You can invoke more URLs if you want:
# !system("../helpers/pipeline-request.perl GET 'URL'") or die;
# !system("../helpers/pipeline-request.perl GET 'URL'") or die;
############################################

# Save the result-files, excluding unwanted files:
!system("../helpers/copy-dir.perl '$wwwDir' 'result-files'") or die;

# The test passes (exit 0) iff the result-files match the expected-files,
# excluding the "lm" and "ont" directories:
exit 1 if system("../helpers/compare-results.perl expected-files result-files");
exit 0;

