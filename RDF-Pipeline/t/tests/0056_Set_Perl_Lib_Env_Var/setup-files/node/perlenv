#! /usr/bin/perl -w

use strict;

# Verify that the Perl lib and other env vars are set properly 
# to include RDF Pipeline libs.


# The perl lib path:
print "\nVerifying \@INC contains RDF-Pipeline path\n\n";
my $inc = join(" ", @INC) || "";
$inc =~ m/RDF-Pipeline\/lib/ or die "Perl INC is not set properly: $inc\n";

print "Verifying PERL5LIB contains RDF-Pipeline/lib path\n\n";
my $lib = $ENV{PERL5LIB} || "";
$lib || die "\$PERL5LIB is not set!\n";
$lib =~ m/RDF-Pipeline\/lib/ or die "Perl PERL5LIB is not set properly: $inc\n";

print "Verifying RDF_PIPELINE_DEV_DIR contains an existing directory\n\n";
my $dev = $ENV{RDF_PIPELINE_DEV_DIR} || "";
$dev || die "\$RDF_PIPELINE_DEV_DIR is not set!\n";
-d $dev || die "RDF_PIPELINE_DEV_DIR does not exist";

# Disabled at David's recommendation since we may want to revisit this
# SPARQL_SERVER is not set by default in set_env but it is used by some tools
# my $server = $ENV{SPARQL_SERVER} || "";
# print "SPARQL_SERVER=$server\n\n";
# Okay if this isn't set:
# $server || die "\$SPARQL_SERVER is not set!\n";

print "Verifying that PATH contains RDF_PIPELINE_DEV_DIR\n\n";
my $path = $ENV{PATH} || "";
(my $rdf_home = $dev) =~ tr#\\#\\//#;    # escape back slashes
$path =~ m/$rdf_home/ or die "PATH is not set correctly for RDF Pipeline!\n";

exit 0;

